{"version":3,"sources":["components/Legend.js","components/StateMap.js","components/DataTable.js","components/StateDropdownBtn.js","App.js","index.js"],"names":["Legend","className","StateMap","props","useState","updateCurrentAcres","updateCurrentState","tempState","updateTempState","currentMouseX","updateMouseX","currentMouseY","updateMouseY","clickHandler","e","acresData","target","getAttribute","stateData","onStateSelectHandler","mouseEnterHandler","acresMsg","tempStateMsg","mouseLeaveHandler","mouseMoveHandler","clientX","clientY","style","left","top","x","y","width","height","viewBox","Object","keys","stateMapData","filter","item","acres","map","selectedState","id","d","shape","fill","stroke","strokeWidth","onClick","onMouseEnter","onMouseLeave","onMouseMove","DataTable","StateDropdownBtn","value","onChange","App","setSelectedState","console","log","data","setData","axios","get","then","response","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c8bb896f.chunk.js","sourcesContent":["import './Legend.css';\n\nconst Legend = () => {\n    return(\n        <div className=\"legend-wrapper\">\n            <div className=\"legend-totalAcre\">\n                <p className=\"legend-totalAcre__label\">TOTAL CERTIFIED ORGANIC VALLEY</p>\n                <div className=\"legend-totalAcre__number\">\n                    <h2>397,269 ACRES </h2>\n                </div>\n            </div>\n            <div className=\"legend-colorInfo\">\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__color__hasAcres\"></div>\n                    <div className=\"legend-colorInfo__label\">HAS ORGANIC VALLEY ACRES</div>\n                </div>\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__box__selected\"></div>\n                    <div className=\"legend-colorInfo__label\">HAS ORGANIC VALLEY ACRES (SELECTED)</div>\n                </div>\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__color__noAcres\"></div>\n                    <div className=\"legend-colorInfo__label\">NO ORGANIC VALLEY ACRES</div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Legend;","import { useState} from 'react';\nimport './StateMap.css';\nimport Legend from './Legend';\n\nconst StateMap = (props) => {\n\n    const [currentAcres, updateCurrentAcres] = useState('');\n    const [currentState, updateCurrentState] = useState('');\n    const [tempState, updateTempState] = useState ('');\n    const [currentMouseX, updateMouseX]= useState (0);\n    const [currentMouseY, updateMouseY]= useState (0);\n\n\n    const clickHandler = (e) => {\n        const acresData = e.target.getAttribute('acres');\n        const stateData = e.target.getAttribute('id');\n        updateCurrentAcres(acresData);\n        updateCurrentState(stateData);\n\n        props.onStateSelectHandler(stateData);\n    };\n\n    const mouseEnterHandler = (e) => {\n\n        const acres = e.target.getAttribute('acres');\n        const acresMsg = acres === \"0\" ? \"No Organic Valley Acres\" : \"Click to Learn More\";\n        const tempStateMsg = <p>{e.target.getAttribute('id')}<br />{acresMsg}</p>;\n\n        updateTempState(tempStateMsg);\n    }\n\n    const mouseLeaveHandler = (e) => {\n        updateCurrentAcres('');\n        updateCurrentState('');\n        updateTempState('');\n    };\n\n    const mouseMoveHandler = (e) => {\n        updateMouseX(e.clientX);\n        updateMouseY(e.clientY);\n    };\n\n    return (\n        <div className=\"state-map\">\n            <div className={tempState==='' ? 'hoverMsg hide' : 'hoverMsg'} style={{left:`${currentMouseX}px`, top:`${currentMouseY}px`} }>{tempState}</div>\n            <svg x=\"0\" y=\"0\" width=\"575\" height=\"356\" viewBox=\"174 100 959 593\">\n                {Object.keys(props.stateMapData).filter(item=>props.stateMapData[item].acres != \"0\").map(item => <path\n                    className={props.selectedState === item ? 'selected' : ''} \n                    id={item} \n                    key={item} \n                    d={props.stateMapData[item].shape} \n                    fill=\"#988c83\"\n                    stroke=\"white\"\n                    strokeWidth=\"2px\"\n                    acres={props.stateMapData[item].acres}\n                    onClick={clickHandler}\n                    onMouseEnter={mouseEnterHandler}\n                    onMouseLeave={mouseLeaveHandler}\n                    onMouseMove={mouseMoveHandler}\n                />)}\n                {Object.keys(props.stateMapData).filter(item=>props.stateMapData[item].acres === \"0\").map(item => <path\n                    className={props.selectedState === item ? 'selected' : ''} \n                    id={item} \n                    key={item} \n                    d={props.stateMapData[item].shape} \n                    fill=\"#c4c0bc\"\n                    stroke=\"white\"\n                    strokeWidth=\"2px\"\n                    acres={props.stateMapData[item].acres}\n                    // onClick={mouseEnterHandler}\n                    onMouseEnter={mouseEnterHandler}\n                    onMouseLeave={mouseLeaveHandler}\n                    onMouseMove={mouseMoveHandler}\n                />)}\n            </svg>\n            <div>\n                <Legend />\n            </div>\n        </div>\n    );\n};\n\nexport default StateMap;","import './DataTable.css';\n\nconst DataTable = (props) => {\n\n    return(\n        <div className=\"stateData-table__wrapper\">\n            <table>\n                <thead>\n                    <tr>\n                        <th className=\"stateData-table__th\">State Name</th>\n                        <th className=\"stateData-table__th\">Total Certified Organic Valley Acres</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map(item => {\n                        return <tr key={item}>\n                            <td className=\"stateData-table__td\">{item}</td>\n                            <td className=\"stateData-table__td\">{props.stateMapData[item].acres}</td>\n                        </tr>\n                    }\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default DataTable;","import './StateDropdownBtn.css';\n\nconst StateDropdownBtn = (props) => {\n\n   const stateSelectHandler = (e) => {\n    // console.log(e.target.value);\n    props.onStateSelectHandler(e.target.value);\n   }\n\n    return(\n        <form className=\"StateDropdownBtn-wrapper\">\n            <select id=\"stateName\" value={props.selectedState} onChange={stateSelectHandler}>\n            {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map (item =>\n                <option key={item} value={item}>\n                    {item} | {props.stateMapData[item].acres} acres\n                </option>\n            )}\n            </select>\n        </form>\n    );\n};\n\nexport default StateDropdownBtn;","import StateMap from './components/StateMap';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport DataTable from './components/DataTable';\nimport StateDropdownBtn from './components/StateDropdownBtn';\n\nfunction App() {\n\n  const [selectedState, setSelectedState] = useState(\"\");\n\n  const onStateSelectHandler = (e) => {\n    console.log(e);\n    setSelectedState(e);\n  }\n\n  const [data, setData] = useState({});\n  \n  axios.get(\"https://love2create.github.io/InteractiveStateMap/src/data/stateData.json\").then(response=>{\n    setData(response.data);\n  });\n\n  return (\n    <div>\n      <StateDropdownBtn stateMapData={data} onStateSelectHandler={onStateSelectHandler} selectedState={selectedState} />\n      <StateMap stateMapData={data} onStateSelectHandler={onStateSelectHandler} selectedState={selectedState}/>\n      <DataTable stateMapData={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}