{"version":3,"sources":["components/Legend.js","components/StateMap.js","components/DataTable.js","components/StateDropdownBtn.js","App.js","index.js"],"names":["Legend","className","StateMap","props","useState","updateCurrentAcres","updateCurrentState","tempState","updateTempState","currentMouseX","updateMouseX","currentMouseY","updateMouseY","setStateShape","clickHandler","e","shape","target","getAttribute","acresData","stateData","onStateSelectHandler","mouseEnterHandler","mouseLeaveHandler","mouseMoveHandler","acresMsg","tempStateMsg","clientX","clientY","role","style","left","top","x","y","width","height","viewBox","Object","keys","stateMapData","filter","item","acres","map","selectedState","id","d","fill","stroke","strokeWidth","onClick","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","DataTable","summary","StateDropdownBtn","variant","title","value","onChange","App","setSelectedState","console","log","data","setData","axios","get","then","response","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.894b67f8.chunk.js","sourcesContent":["import './Legend.css';\n\nconst Legend = () => {\n    return(\n        <section className=\"legend-wrapper\">\n            <div className=\"legend-totalAcre\">\n                <div className=\"legend-totalAcre__label\">TOTAL CERTIFIED ORGANIC VALLEY ACRES</div>\n                <div className=\"legend-totalAcre__number\">\n                    <h2>397,269</h2>\n                </div>\n            </div>\n            <div className=\"legend-colorInfo\">\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__color__hasAcres\"></div>\n                    <div className=\"legend-colorInfo__label\">HAS ORGANIC VALLEY ACRES</div>\n                </div>\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__box__selected\"></div>\n                    <div className=\"legend-colorInfo__label\">HAS ORGANIC VALLEY ACRES (SELECTED)</div>\n                </div>\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__color__noAcres\"></div>\n                    <div className=\"legend-colorInfo__label\">NO ORGANIC VALLEY ACRES</div>\n                </div>\n            </div>\n\n        </section>\n    );\n}\n\nexport default Legend;","import { useState } from 'react';\nimport './StateMap.css';\nimport Legend from './Legend';\n\nconst StateMap = (props) => {\n\n    const [currentAcres, updateCurrentAcres] = useState('');\n    const [currentState, updateCurrentState] = useState('');\n    const [tempState, updateTempState] = useState('');\n    const [currentMouseX, updateMouseX] = useState(0);\n    const [currentMouseY, updateMouseY] = useState(0);\n    const [currentStateShape, setStateShape] = useState('');\n\n    const clickHandler = (e) => {\n        const shape = e.target.getAttribute('d');\n        const acresData = e.target.getAttribute('acres');\n        const stateData = e.target.getAttribute('id');\n        updateCurrentAcres(acresData);\n        updateCurrentState(stateData);\n\n        setStateShape(shape);\n\n        props.onStateSelectHandler(stateData);\n    };\n\n    const mouseEnterHandler = (e) => {\n\n\n    }\n\n    const mouseLeaveHandler = (e) => {\n        updateCurrentAcres('');\n        updateCurrentState('');\n        updateTempState('');\n    };\n\n    const mouseMoveHandler = (e) => {\n\n        const acres = e.target.getAttribute('acres');\n        const acresMsg = acres === \"0\" ? <p className=\"hoverMsg__extraInfo\">NO ORGANIC VALLEY ACRES</p> : <p className=\"hoverMsg__extraInfo\">CLICK TO LEARN MORE</p>;\n        const tempStateMsg = <p className=\"temp-msg__stateName\">{e.target.getAttribute('id')}<br />{acresMsg}</p>;\n\n        updateTempState(tempStateMsg);\n\n        updateMouseX(e.clientX);\n        updateMouseY(e.clientY);\n\n    };\n\n\n    return (\n        <div className=\"state-map\" aria-hidden=\"true\" role=\"presentation\">\n            <div className={tempState === '' ? 'hoverMsg hide' : 'hoverMsg'} style={{ left: `${currentMouseX}px`, top: `${currentMouseY}px` }}>{tempState}</div>\n            <svg x=\"0\" y=\"0\" width=\"575\" height=\"356\" viewBox=\"174 100 959 593\">\n                {/* <defs>\n                    <clipPath id=\"selectionMask\">\n                        <path d={currentStateShape} />\n                    </clipPath>\n                </defs> */}\n                <g>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map(item => <path\n                        className={props.selectedState === item ? 'selected' : ''}\n                        id={item}\n                        key={item}\n                        d={props.stateMapData[item].shape}\n                        fill=\"#988c83\"\n                        stroke=\"white\"\n                        strokeWidth=\"2px\"\n                        acres={props.stateMapData[item].acres}\n                        onClick={clickHandler}\n                        onMouseEnter={mouseEnterHandler}\n                        onMouseLeave={mouseLeaveHandler}\n                        onMouseMove={mouseMoveHandler}\n                        onMouseUp={mouseLeaveHandler}\n                    />)}\n                </g>\n                <g>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres === \"0\").map(item => <path\n                        className={props.selectedState === item ? 'selected' : ''}\n                        id={item}\n                        key={item}\n                        d={props.stateMapData[item].shape}\n                        fill=\"#c4c0bc\"\n                        stroke=\"white\"\n                        strokeWidth=\"2px\"\n                        acres={props.stateMapData[item].acres}\n                        onMouseEnter={mouseEnterHandler}\n                        onMouseLeave={mouseLeaveHandler}\n                        onMouseMove={mouseMoveHandler}\n                    />)}\n                </g>\n                {/* <g className=\"line-pattern\">\n                    {[...new Array(300).keys()].map(item => <line x1=\"0\" y1={-100 + item * 10} x2=\"1500\" y2={-600 + item * 10} stroke=\"#ffffff\" strokeWidth=\"2px\" clipPath=\"url(#selectionMask)\" key={item} />)}\n                </g> */}\n            </svg>\n            <div>\n                <Legend />\n            </div>\n        </div>\n    );\n};\n\nexport default StateMap;","import './DataTable.css';\n\nconst DataTable = (props) => {\n\n    return(\n        <section className=\"stateData-table__wrapper\">\n            <table summary=\"state acre table\">\n                <thead>\n                    <tr>\n                        <th className=\"stateData-table__th\">State Name</th>\n                        <th className=\"stateData-table__th\">Total Certified Organic Valley Acres</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map(item => {\n                        return <tr key={item}>\n                            <td className=\"stateData-table__td\">{item}</td>\n                            <td className=\"stateData-table__td\">{props.stateMapData[item].acres}</td>\n                        </tr>\n                    }\n                    )}\n                </tbody>\n            </table>\n        </section>\n    );\n};\n\nexport default DataTable;","import './StateDropdownBtn.css';\nimport ArrowGraphic from './ArrowGraphic';\n\nconst StateDropdownBtn = (props) => {\n\n    const stateSelectHandler = (e) => {\n        // console.log(e.target.value);\n        props.onStateSelectHandler(e.target.value);\n    }\n\n    return (\n        <form className=\"StateDropdownBtn-wrapper\">\n            <label className=\"StateDropdownBtn-dropdown__label\">\n                <select\n                    variant=\"standard\"\n                    title=\"state selector\"\n                    id=\"stateName\"\n                    value={props.selectedState}\n                    onChange={stateSelectHandler}>\n                    <option value=\"\">Pick a State</option>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map(item =>\n                        <option key={item} value={item}>\n                            {item}:  {props.stateMapData[item].acres} acres\n                        </option>\n                    )}\n                </select>\n            </label>\n        </form>\n    );\n};\n\nexport default StateDropdownBtn;","import StateMap from './components/StateMap';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport DataTable from './components/DataTable';\nimport StateDropdownBtn from './components/StateDropdownBtn';\n\nfunction App() {\n\n  const [selectedState, setSelectedState] = useState(\"\");\n  const [currentStateShape, setStateShape] = useState('');\n\n  const onStateSelectHandler = (e) => {\n    console.log(e);\n    setSelectedState(e);\n  }\n\n  const [data, setData] = useState({});\n  \n  axios.get(\"https://love2create.github.io/InteractiveStateMap/src/data/stateData.json\").then(response=>{\n    setData(response.data);\n  });\n\n  return (\n    <main>\n      <h1>Organic Valley Acres Map</h1>\n      <DataTable stateMapData={data} />\n      <StateDropdownBtn stateMapData={data} onStateSelectHandler={onStateSelectHandler} selectedState={selectedState} />\n      <StateMap stateMapData={data} onStateSelectHandler={onStateSelectHandler} selectedState={selectedState}/>\n    </main>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}