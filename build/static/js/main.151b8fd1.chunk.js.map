{"version":3,"sources":["components/Legend.js","components/StateMap.js","components/DataTable.js","components/ArrowGraphic.js","components/StateDropdownBtn.js","App.js","index.js"],"names":["Legend","className","StateMap","props","useState","updateCurrentAcres","updateCurrentState","tempState","updateTempState","currentMouseX","updateMouseX","currentMouseY","updateMouseY","clickHandler","e","acresData","target","getAttribute","stateData","onStateSelectHandler","mouseEnterHandler","mouseLeaveHandler","mouseMoveHandler","acresMsg","tempStateMsg","clientX","clientY","role","style","left","top","x","y","width","height","viewBox","Object","keys","stateMapData","filter","item","acres","map","selectedState","id","d","shape","fill","stroke","strokeWidth","onClick","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","DataTable","summary","ArrowGraphic","xmlns","class","points","StateDropdownBtn","title","value","onChange","App","setSelectedState","console","log","data","setData","axios","get","then","response","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.151b8fd1.chunk.js","sourcesContent":["import './Legend.css';\n\nconst Legend = () => {\n    return(\n        <div className=\"legend-wrapper\">\n            <div className=\"legend-totalAcre\">\n                <p className=\"legend-totalAcre__label\">TOTAL CERTIFIED ORGANIC VALLEY ACRES</p>\n                <div className=\"legend-totalAcre__number\">\n                    <h2>397,269</h2>\n                </div>\n            </div>\n            <div className=\"legend-colorInfo\">\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__color__hasAcres\"></div>\n                    <div className=\"legend-colorInfo__label\">HAS ORGANIC VALLEY ACRES</div>\n                </div>\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__box__selected\"></div>\n                    <div className=\"legend-colorInfo__label\">HAS ORGANIC VALLEY ACRES (SELECTED)</div>\n                </div>\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__color__noAcres\"></div>\n                    <div className=\"legend-colorInfo__label\">NO ORGANIC VALLEY ACRES</div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Legend;","import { useState} from 'react';\nimport './StateMap.css';\nimport Legend from './Legend';\n\nconst StateMap = (props) => {\n\n    const [currentAcres, updateCurrentAcres] = useState('');\n    const [currentState, updateCurrentState] = useState('');\n    const [tempState, updateTempState] = useState ('');\n    const [currentMouseX, updateMouseX]= useState (0);\n    const [currentMouseY, updateMouseY]= useState (0);\n\n\n    const clickHandler = (e) => {\n        const acresData = e.target.getAttribute('acres');\n        const stateData = e.target.getAttribute('id');\n        updateCurrentAcres(acresData);\n        updateCurrentState(stateData);\n\n        props.onStateSelectHandler(stateData);\n    };\n\n    const mouseEnterHandler = (e) => {\n\n        \n    }\n\n    const mouseLeaveHandler = (e) => {\n        updateCurrentAcres('');\n        updateCurrentState('');\n        updateTempState('');\n    };\n\n    const mouseMoveHandler = (e) => {\n\n        const acres = e.target.getAttribute('acres');\n        const acresMsg = acres === \"0\" ? <p className=\"hoverMsg__extraInfo\">NO ORGANIC VALLEY ACRES</p> : <p className=\"hoverMsg__extraInfo\">CLICK TO LEARN MORE</p>;\n        const tempStateMsg = <p className=\"temp-msg__stateName\">{e.target.getAttribute('id')}<br />{acresMsg}</p>;\n\n        updateTempState(tempStateMsg);\n\n        updateMouseX(e.clientX);\n        updateMouseY(e.clientY);\n        \n    };\n\n\n    return (\n        <div className=\"state-map\" aria-hidden=\"true\" role=\"presentation\">\n            <div className={tempState==='' ? 'hoverMsg hide' : 'hoverMsg'} style={{left:`${currentMouseX}px`, top:`${currentMouseY}px`} }>{tempState}</div>\n            <svg x=\"0\" y=\"0\" width=\"575\" height=\"356\" viewBox=\"174 100 959 593\">\n                {Object.keys(props.stateMapData).filter(item=>props.stateMapData[item].acres != \"0\").map(item => <path\n                    className={props.selectedState === item ? 'selected' : ''} \n                    id={item} \n                    key={item} \n                    d={props.stateMapData[item].shape} \n                    fill=\"#988c83\"\n                    stroke=\"white\"\n                    strokeWidth=\"2px\"\n                    acres={props.stateMapData[item].acres}\n                    onClick={clickHandler}\n                    onMouseEnter={mouseEnterHandler}\n                    onMouseLeave={mouseLeaveHandler}\n                    onMouseMove={mouseMoveHandler}\n                    onMouseUp={mouseLeaveHandler}\n                />)}\n                {Object.keys(props.stateMapData).filter(item=>props.stateMapData[item].acres === \"0\").map(item => <path\n                    className={props.selectedState === item ? 'selected' : ''} \n                    id={item} \n                    key={item} \n                    d={props.stateMapData[item].shape} \n                    fill=\"#c4c0bc\"\n                    stroke=\"white\"\n                    strokeWidth=\"2px\"\n                    acres={props.stateMapData[item].acres}\n                    onMouseEnter={mouseEnterHandler}\n                    onMouseLeave={mouseLeaveHandler}\n                    onMouseMove={mouseMoveHandler}\n                />)}\n            </svg>\n            <div>\n                <Legend />\n            </div>\n        </div>\n    );\n};\n\nexport default StateMap;","import './DataTable.css';\n\nconst DataTable = (props) => {\n\n    return(\n        <div className=\"stateData-table__wrapper\">\n            <table summary=\"state acre table\">\n                <thead>\n                    <tr>\n                        <th className=\"stateData-table__th\">State Name</th>\n                        <th className=\"stateData-table__th\">Total Certified Organic Valley Acres</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map(item => {\n                        return <tr key={item}>\n                            <td className=\"stateData-table__td\">{item}</td>\n                            <td className=\"stateData-table__td\">{props.stateMapData[item].acres}</td>\n                        </tr>\n                    }\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default DataTable;","import './ArrowGraphic.css';\n\nconst ArrowGraphic = () => {\n\n    return(\n        <svg className=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.96 7.48\"><polygon class=\"b\" points=\"7.48 7.48 0 0 14.96 0 7.48 7.48\" fill=\"currentColor\" width=\"10px\" height=\"7px\" /></svg>\n    );\n}\n\nexport default ArrowGraphic;","import './StateDropdownBtn.css';\nimport ArrowGraphic from './ArrowGraphic';\n\nconst StateDropdownBtn = (props) => {\n\n   const stateSelectHandler = (e) => {\n    // console.log(e.target.value);\n    props.onStateSelectHandler(e.target.value);\n   }\n\n    return(\n        <form className=\"StateDropdownBtn-wrapper\">\n            <label className=\"StateDropdownBtn-dropdown__label\">\n                <span className=\"arrow\">Select a State with Organic Valley Acres</span>\n                <select title=\"state selector\" id=\"stateName\" value={props.selectedState} onChange={stateSelectHandler}>\n                    <option value=\"\" className=\"StateDropdownBtn-defaultOption__wrapper\">Pick a State <ArrowGraphic /> </option>\n                {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map (item =>\n                    <option key={item} value={item}>\n                        {item}:  {props.stateMapData[item].acres} acres\n                    </option>\n                )}\n                </select>\n            </label>\n        </form>\n    );\n};\n\nexport default StateDropdownBtn;","import StateMap from './components/StateMap';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport DataTable from './components/DataTable';\nimport StateDropdownBtn from './components/StateDropdownBtn';\n\nfunction App() {\n\n  const [selectedState, setSelectedState] = useState(\"\");\n\n  const onStateSelectHandler = (e) => {\n    console.log(e);\n    setSelectedState(e);\n  }\n\n  const [data, setData] = useState({});\n  \n  axios.get(\"https://love2create.github.io/InteractiveStateMap/src/data/stateData.json\").then(response=>{\n    setData(response.data);\n  });\n\n  return (\n    <main>\n      <h1>Organic Valley Acres Map</h1>\n      <DataTable stateMapData={data} />\n      <StateDropdownBtn stateMapData={data} onStateSelectHandler={onStateSelectHandler} selectedState={selectedState} />\n      <StateMap stateMapData={data} onStateSelectHandler={onStateSelectHandler} selectedState={selectedState}/>\n    </main>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}