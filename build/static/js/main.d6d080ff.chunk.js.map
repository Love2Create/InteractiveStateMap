{"version":3,"sources":["components/Legend.js","components/StateMap.js","components/DataTable.js","components/StateDropdownBtn.js","App.js","index.js"],"names":["Legend","className","StateMap","props","useState","updateCurrentAcres","updateCurrentState","mouseEnterHandler","e","acresData","target","getAttribute","stateData","mouseLeaveHandler","x","y","width","height","viewBox","Object","keys","stateMapData","map","item","id","d","shape","fill","acres","stroke","strokeWidth","onMouseEnter","onMouseLeave","onTouchStart","DataTable","StateDropdownBtn","value","App","data","setData","axios","get","then","response","ReactDOM","createRoot","document","getElementById","render"],"mappings":"8RA8BeA,EA5BA,WACX,OACI,sBAAKC,UAAU,iBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,mBAAGA,UAAU,0BAAb,4CACA,qBAAKA,UAAU,2BAAf,SACI,qDAGR,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,4DACf,qBAAKA,UAAU,0BAAf,yCAEJ,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,0DACf,qBAAKA,UAAU,0BAAf,oDAEJ,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,2DACf,qBAAKA,UAAU,0BAAf,+CCsBLC,EAxCE,SAACC,GAEd,MAA2CC,mBAAS,IAApD,mBAAqBC,GAArB,WACA,EAA2CD,mBAAS,IAApD,mBAAqBE,GAArB,WAEMC,EAAoB,SAACC,GACvB,IAAMC,EAAYD,EAAEE,OAAOC,aAAa,SAClCC,EAAYJ,EAAEE,OAAOC,aAAa,MACxCN,EAAmBI,GACnBH,EAAmBM,IAGjBC,EAAoB,SAACL,GACvBH,EAAmB,IACnBC,EAAmB,KAGvB,OACI,sBAAKL,UAAU,YAAf,UACI,qBAAKa,EAAE,IAAIC,EAAE,IAAIC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,kBAAlD,SACKC,OAAOC,KAAKjB,EAAMkB,cAAcC,KAAI,SAAAC,GAAI,OAAI,sBACzCC,GAAID,EAEJE,EAAGtB,EAAMkB,aAAaE,GAAMG,MAC5BC,KAAyC,MAAnCxB,EAAMkB,aAAaE,GAAMK,MAAgB,UAAY,UAC3DC,OAAO,QACPC,YAAY,MACZF,MAAOzB,EAAMkB,aAAaE,GAAMK,MAChCG,aAAcxB,EACdyB,aAAcnB,EACdoB,aAAc1B,GARTgB,QAWb,8BACI,cAAC,EAAD,U,iBCXDW,EAzBG,SAAC/B,GAEf,OACI,8BACI,kCACI,gCACI,+BACI,4CACA,2EAGR,gCACKgB,OAAOC,KAAKjB,EAAMkB,cAAcC,KAAI,SAAAC,GACjC,OAAO,+BACH,6BAAKA,IACL,6BAAKpB,EAAMkB,aAAaE,GAAMK,UAFlBL,cCEzBY,G,MAfU,SAAChC,GAEtB,OACI,sBAAMF,UAAU,2BAAhB,SACI,wBAAQuB,GAAG,YAAX,SACCL,OAAOC,KAAKjB,EAAMkB,cAAcC,KAAK,SAAAC,GAAI,OACtC,wBAAmBa,MAAOb,EAA1B,SACKA,GADQA,YCedc,MAjBf,WAEE,MAAwBjC,mBAAS,IAAjC,mBAAOkC,EAAP,KAAaC,EAAb,KAMA,OAJAC,IAAMC,IAAI,6EAA6EC,MAAK,SAAAC,GAC1FJ,EAAQI,EAASL,SAIjB,gCACE,cAAC,EAAD,CAAkBjB,aAAciB,IAChC,cAAC,EAAD,CAAUjB,aAAciB,IACxB,cAAC,EAAD,CAAWjB,aAAciB,QCblBM,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.d6d080ff.chunk.js","sourcesContent":["import './Legend.css';\n\nconst Legend = () => {\n    return(\n        <div className=\"legend-wrapper\">\n            <div className=\"legend-totalAcre\">\n                <p className=\"legend-totalAcre__label\">TOTAL CERTIFIED ORGANIC VALLEY</p>\n                <div className=\"legend-totalAcre__number\">\n                    <h2>397,269 ACRES </h2>\n                </div>\n            </div>\n            <div className=\"legend-colorInfo\">\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__color__hasAcres\"></div>\n                    <div className=\"legend-colorInfo__label\">HAS ORGANIC VALLEY ACRES</div>\n                </div>\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__box__selected\"></div>\n                    <div className=\"legend-colorInfo__label\">HAS ORGANIC VALLEY ACRES (SELECTED)</div>\n                </div>\n                <div className=\"display-flex\">\n                    <div className=\"legend-colorInfo__box legend-colorInfo__color__noAcres\"></div>\n                    <div className=\"legend-colorInfo__label\">NO ORGANIC VALLEY ACRES</div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Legend;","import { useState} from 'react';\nimport './StateMap.css';\nimport Legend from './Legend';\n\nconst StateMap = (props) => {\n\n    const [currentAcres, updateCurrentAcres] = useState('');\n    const [currentState, updateCurrentState] = useState('');\n\n    const mouseEnterHandler = (e) => {\n        const acresData = e.target.getAttribute('acres');\n        const stateData = e.target.getAttribute('id');\n        updateCurrentAcres(acresData);\n        updateCurrentState(stateData);\n    };\n\n    const mouseLeaveHandler = (e) => {\n        updateCurrentAcres('');\n        updateCurrentState('');\n    };\n\n    return (\n        <div className=\"state-map\">\n            <svg x=\"0\" y=\"0\" width=\"575\" height=\"356\" viewBox=\"174 100 959 593\">\n                {Object.keys(props.stateMapData).map(item => <path \n                    id={item} \n                    key={item} \n                    d={props.stateMapData[item].shape} \n                    fill={props.stateMapData[item].acres === \"0\" ? \"#c4c0bc\" : \"#988c83\" }\n                    stroke=\"white\"\n                    strokeWidth=\"2px\"\n                    acres={props.stateMapData[item].acres}\n                    onMouseEnter={mouseEnterHandler}\n                    onMouseLeave={mouseLeaveHandler}\n                    onTouchStart={mouseEnterHandler}\n                />)}\n            </svg>\n            <div>\n                <Legend />\n            </div>\n        </div>\n    );\n};\n\nexport default StateMap;","\n\nconst DataTable = (props) => {\n\n    return(\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>State Name</th>\n                        <th>Total Certified Organic Valley Acres</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(props.stateMapData).map(item => {\n                        return <tr key={item}>\n                            <td>{item}</td>\n                            <td>{props.stateMapData[item].acres}</td>\n                        </tr>\n                    }\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default DataTable;","import './StateDropdownBtn.css';\n\nconst StateDropdownBtn = (props) => {\n\n    return(\n        <form className=\"StateDropdownBtn-wrapper\">\n            <select id=\"stateName\">\n            {Object.keys(props.stateMapData).map (item =>\n                <option key={item} value={item}>\n                    {item}\n                </option>\n            )}\n            </select>\n        </form>\n    );\n};\n\nexport default StateDropdownBtn;","import StateMap from './components/StateMap';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport DataTable from './components/DataTable';\nimport StateDropdownBtn from './components/StateDropdownBtn';\n\nfunction App() {\n\n  const [data, setData] = useState({});\n  \n  axios.get(\"https://love2create.github.io/InteractiveStateMap/src/data/stateData.json\").then(response=>{\n    setData(response.data);\n  });\n\n  return (\n    <div>\n      <StateDropdownBtn stateMapData={data} />\n      <StateMap stateMapData={data} />\n      <DataTable stateMapData={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}