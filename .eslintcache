[{"/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/index.js":"1","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/App.js":"2","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/StateMap.js":"3","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/DataTable.js":"4","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/Legend.js":"5","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/StateDropdownBtn.js":"6","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/ArrowGraphic.js":"7"},{"size":179,"mtime":1655679536462,"results":"8","hashOfConfig":"9"},{"size":1003,"mtime":1656000383557,"results":"10","hashOfConfig":"9"},{"size":4060,"mtime":1656017656165,"results":"11","hashOfConfig":"9"},{"size":997,"mtime":1656000520214,"results":"12","hashOfConfig":"9"},{"size":1300,"mtime":1656018657299,"results":"13","hashOfConfig":"9"},{"size":1099,"mtime":1656017890499,"results":"14","hashOfConfig":"9"},{"size":329,"mtime":1655945468017,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1sbt3sv",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/index.js",[],["35","36"],"/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/App.js",["37","38"],"import StateMap from './components/StateMap';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport DataTable from './components/DataTable';\nimport StateDropdownBtn from './components/StateDropdownBtn';\n\nfunction App() {\n\n  const [selectedState, setSelectedState] = useState(\"\");\n  const [currentStateShape, setStateShape] = useState('');\n\n  const onStateSelectHandler = (e) => {\n    console.log(e);\n    setSelectedState(e);\n  }\n\n  const [data, setData] = useState({});\n  \n  axios.get(\"https://love2create.github.io/InteractiveStateMap/src/data/stateData.json\").then(response=>{\n    setData(response.data);\n  });\n\n  return (\n    <main>\n      <h1>Organic Valley Acres Map</h1>\n      <DataTable stateMapData={data} />\n      <StateDropdownBtn stateMapData={data} onStateSelectHandler={onStateSelectHandler} selectedState={selectedState} />\n      <StateMap stateMapData={data} onStateSelectHandler={onStateSelectHandler} selectedState={selectedState}/>\n    </main>\n  );\n}\n\nexport default App;\n","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/StateMap.js",["39","40","41","42"],"import { useState } from 'react';\nimport './StateMap.css';\nimport Legend from './Legend';\n\nconst StateMap = (props) => {\n\n    const [currentAcres, updateCurrentAcres] = useState('');\n    const [currentState, updateCurrentState] = useState('');\n    const [tempState, updateTempState] = useState('');\n    const [currentMouseX, updateMouseX] = useState(0);\n    const [currentMouseY, updateMouseY] = useState(0);\n    const [currentStateShape, setStateShape] = useState('');\n\n    const clickHandler = (e) => {\n        const shape = e.target.getAttribute('d');\n        const acresData = e.target.getAttribute('acres');\n        const stateData = e.target.getAttribute('id');\n        updateCurrentAcres(acresData);\n        updateCurrentState(stateData);\n\n        setStateShape(shape);\n\n        props.onStateSelectHandler(stateData);\n    };\n\n    const mouseEnterHandler = (e) => {\n\n\n    }\n\n    const mouseLeaveHandler = (e) => {\n        updateCurrentAcres('');\n        updateCurrentState('');\n        updateTempState('');\n    };\n\n    const mouseMoveHandler = (e) => {\n\n        const acres = e.target.getAttribute('acres');\n        const acresMsg = acres === \"0\" ? <p className=\"hoverMsg__extraInfo\">NO ORGANIC VALLEY ACRES</p> : <p className=\"hoverMsg__extraInfo\">CLICK TO LEARN MORE</p>;\n        const tempStateMsg = <p className=\"temp-msg__stateName\">{e.target.getAttribute('id')}<br />{acresMsg}</p>;\n\n        updateTempState(tempStateMsg);\n\n        updateMouseX(e.clientX);\n        updateMouseY(e.clientY);\n\n    };\n\n\n    return (\n        <div className=\"state-map\" aria-hidden=\"true\" role=\"presentation\">\n            <div className={tempState === '' ? 'hoverMsg hide' : 'hoverMsg'} style={{ left: `${currentMouseX}px`, top: `${currentMouseY}px` }}>{tempState}</div>\n            <svg x=\"0\" y=\"0\" width=\"575\" height=\"356\" viewBox=\"174 100 959 593\">\n                {/* <defs>\n                    <clipPath id=\"selectionMask\">\n                        <path d={currentStateShape} />\n                    </clipPath>\n                </defs> */}\n                <g>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map(item => <path\n                        className={props.selectedState === item ? 'selected' : ''}\n                        id={item}\n                        key={item}\n                        d={props.stateMapData[item].shape}\n                        fill=\"#988c83\"\n                        stroke=\"white\"\n                        strokeWidth=\"2px\"\n                        acres={props.stateMapData[item].acres}\n                        onClick={clickHandler}\n                        onMouseEnter={mouseEnterHandler}\n                        onMouseLeave={mouseLeaveHandler}\n                        onMouseMove={mouseMoveHandler}\n                        onMouseUp={mouseLeaveHandler}\n                    />)}\n                </g>\n                <g>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres === \"0\").map(item => <path\n                        className={props.selectedState === item ? 'selected' : ''}\n                        id={item}\n                        key={item}\n                        d={props.stateMapData[item].shape}\n                        fill=\"#c4c0bc\"\n                        stroke=\"white\"\n                        strokeWidth=\"2px\"\n                        acres={props.stateMapData[item].acres}\n                        onMouseEnter={mouseEnterHandler}\n                        onMouseLeave={mouseLeaveHandler}\n                        onMouseMove={mouseMoveHandler}\n                    />)}\n                </g>\n                {/* <g className=\"line-pattern\">\n                    {[...new Array(300).keys()].map(item => <line x1=\"0\" y1={-100 + item * 10} x2=\"1500\" y2={-600 + item * 10} stroke=\"#ffffff\" strokeWidth=\"2px\" clipPath=\"url(#selectionMask)\" key={item} />)}\n                </g> */}\n            </svg>\n            <div>\n                <Legend />\n            </div>\n        </div>\n    );\n};\n\nexport default StateMap;","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/DataTable.js",["43"],"import './DataTable.css';\n\nconst DataTable = (props) => {\n\n    return(\n        <section className=\"stateData-table__wrapper\">\n            <table summary=\"state acre table\">\n                <thead>\n                    <tr>\n                        <th className=\"stateData-table__th\">State Name</th>\n                        <th className=\"stateData-table__th\">Total Certified Organic Valley Acres</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map(item => {\n                        return <tr key={item}>\n                            <td className=\"stateData-table__td\">{item}</td>\n                            <td className=\"stateData-table__td\">{props.stateMapData[item].acres}</td>\n                        </tr>\n                    }\n                    )}\n                </tbody>\n            </table>\n        </section>\n    );\n};\n\nexport default DataTable;","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/Legend.js",[],"/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/StateDropdownBtn.js",["44","45"],"import './StateDropdownBtn.css';\nimport ArrowGraphic from './ArrowGraphic';\n\nconst StateDropdownBtn = (props) => {\n\n    const stateSelectHandler = (e) => {\n        // console.log(e.target.value);\n        props.onStateSelectHandler(e.target.value);\n    }\n\n    return (\n        <form className=\"StateDropdownBtn-wrapper\">\n            <label className=\"StateDropdownBtn-dropdown__label\">\n                <select\n                    variant=\"standard\"\n                    title=\"state selector\"\n                    id=\"stateName\"\n                    value={props.selectedState}\n                    onChange={stateSelectHandler}>\n                    <option value=\"\">Pick a State</option>\n                    {Object.keys(props.stateMapData).filter(item => props.stateMapData[item].acres != \"0\").map(item =>\n                        <option key={item} value={item}>\n                            {item}:  {props.stateMapData[item].acres} acres\n                        </option>\n                    )}\n                </select>\n            </label>\n        </form>\n    );\n};\n\nexport default StateDropdownBtn;","/Users/vicky.lu/Desktop/DoNotDelete/Code/InteractiveStateMap/InteractiveStateMap/src/components/ArrowGraphic.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":10,"column":10,"nodeType":"52","messageId":"53","endLine":10,"endColumn":27},{"ruleId":"50","severity":1,"message":"54","line":10,"column":29,"nodeType":"52","messageId":"53","endLine":10,"endColumn":42},{"ruleId":"50","severity":1,"message":"55","line":7,"column":12,"nodeType":"52","messageId":"53","endLine":7,"endColumn":24},{"ruleId":"50","severity":1,"message":"56","line":8,"column":12,"nodeType":"52","messageId":"53","endLine":8,"endColumn":24},{"ruleId":"50","severity":1,"message":"51","line":12,"column":12,"nodeType":"52","messageId":"53","endLine":12,"endColumn":29},{"ruleId":"57","severity":1,"message":"58","line":61,"column":100,"nodeType":"59","messageId":"60","endLine":61,"endColumn":102},{"ruleId":"57","severity":1,"message":"58","line":15,"column":100,"nodeType":"59","messageId":"60","endLine":15,"endColumn":102},{"ruleId":"50","severity":1,"message":"61","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":20},{"ruleId":"57","severity":1,"message":"58","line":21,"column":100,"nodeType":"59","messageId":"60","endLine":21,"endColumn":102},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'currentStateShape' is assigned a value but never used.","Identifier","unusedVar","'setStateShape' is assigned a value but never used.","'currentAcres' is assigned a value but never used.","'currentState' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ArrowGraphic' is defined but never used.","no-global-assign","no-unsafe-negation"]